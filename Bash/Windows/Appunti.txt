Comandi Bash

Comandi di base
dir → Elenca i file e le cartelle nella directory corrente.
cd [percorso] → Cambia directory.
cd .. → Torna alla cartella superiore.
mkdir [nome_cartella] → Crea una nuova cartella.
rmdir [nome_cartella] → Rimuove una cartella vuota.
del [nome_file] → Elimina un file.
copy [file] [destinazione] → Copia un file.
C:\Users\alexandru.condila\Documents>copy .\File1.txt .\Prova
move [file] [destinazione] → Sposta un file.
C:\Users\alexandru.condila\Documents>move .\File1.txt .\Prova

Gestione di file e directory
tree → Mostra la struttura delle cartelle in forma gerarchica.
type [file] → Visualizza il contenuto di un file di testo.
ren [vecchio_nome] [nuovo_nome] → Rinomina un file o una cartella.
C:\Users\alexandru.condila\Documents>ren File1.txt Test.txt

Gestione dei processi
tasklist → Mostra l'elenco dei processi attivi.
taskkill /IM [nome_process] /F → Termina un processo per nome.
taskkill /PID [ID_process] /F → Termina un processo per ID.

Rete
ipconfig → Mostra le informazioni della rete locale.
ping [indirizzo] → Controlla la connessione con un host remoto.
netstat -an → Mostra le connessioni di rete attive e le porte aperte.

Varie
cls → Pulisce la schermata del terminale.
echo [testo] → Stampa il testo nel terminale.
set [variabile=valore] → Imposta una variabile d'ambiente.
shutdown /s /t 0 → Spegne il computer immediatamente.
shutdown /r /t 0 → Riavvia il computer immediatamente.
pause → Mette in pausa l'esecuzione dello script fino alla pressione di un tasto.

Varie
cls → Pulisce la schermata del terminale.
echo [testo] → Stampa il testo nel terminale.
set [variabile=valore] → Imposta una variabile d'ambiente.
shutdown /s /t 0 → Spegne il computer immediatamente.
shutdown /r /t 0 → Riavvia il computer immediatamente.
pause → Mette in pausa l'esecuzione dello script fino alla pressione di un tasto.

Comandi Batch Utili
@echo off → Disabilita la visualizzazione dei comandi nel terminale.
echo [testo] → Stampa un messaggio nel terminale.
start [programma] → Avvia un programma o un file.
call [script.bat] → Esegue un altro script batch senza interrompere il principale.
if exist [file] (comando) → Esegue un comando se un file esiste.
if not exist [file] (comando) → Esegue un comando se un file non esiste.
for %%i in (*.*) do (comando) → Esegue un comando su ogni file in una cartella.
set /p var=Inserisci valore: → Richiede input all'utente.
set /a [variabile=espressione] → Esegue operazioni aritmetiche.
choice /c YN /m "Vuoi continuare?" → Crea una scelta interattiva per l'utente.
goto [etichetta] → Salta a una sezione dello script.
:etichetta → Definisce un punto di salto nello script.
exit → Termina l'esecuzione dello script.
rem [testo] → Aggiunge un commento all'interno dello script batch (non viene eseguito).

Operatori Logici in Batch
&& → Esegue il comando successivo solo se il precedente ha avuto successo.
Esempio: mkdir nuova_cartella && cd nuova_cartella
|| → Esegue il comando successivo solo se il precedente ha fallito.
Esempio: mkdir nuova_cartella || echo La cartella esiste già
^ → Utilizzato per concatenare comandi su più righe.
Esempio: echo Questo è un comando ^ su più righe
| → Piping: usa l'output di un comando come input per un altro.
Esempio: dir | find "file.txt"

Operatori di Confronto in Batch
EQU → Uguale a (==)
Esempio: if %var% EQU 10 echo La variabile è 10
NEQ → Diverso da (!=)
Esempio: if %var% NEQ 5 echo La variabile non è 5
LSS → Minore di (<)
Esempio: if %var% LSS 100 echo La variabile è minore di 100
LEQ → Minore o uguale a (≤)
Esempio: if %var% LEQ 50 echo La variabile è minore o uguale a 50
GTR → Maggiore di (>)
Esempio: if %var% GTR 10 echo La variabile è maggiore di 10
GEQ → Maggiore o uguale a (≥)
Esempio: if %var% GEQ 20 echo La variabile è maggiore o uguale a 20


